[{"/Users/natalietaylor/Desktop/capstone/src/index.js":"1","/Users/natalietaylor/Desktop/capstone/src/App.js":"2","/Users/natalietaylor/Desktop/capstone/src/context/QuotesContext.js":"3","/Users/natalietaylor/Desktop/capstone/src/components/Home.js":"4","/Users/natalietaylor/Desktop/capstone/src/components/Kindness.js":"5","/Users/natalietaylor/Desktop/capstone/src/components/Confidence.js":"6","/Users/natalietaylor/Desktop/capstone/src/components/Success.js":"7","/Users/natalietaylor/Desktop/capstone/src/components/Inspiration.js":"8","/Users/natalietaylor/Desktop/capstone/src/components/KindList.js":"9","/Users/natalietaylor/Desktop/capstone/src/components/InspireList.js":"10","/Users/natalietaylor/Desktop/capstone/src/components/SuccessList.js":"11","/Users/natalietaylor/Desktop/capstone/src/components/ConfidentList.js":"12"},{"size":371,"mtime":1662914088150,"results":"13","hashOfConfig":"14"},{"size":1720,"mtime":1678381041212,"results":"15","hashOfConfig":"14"},{"size":2968,"mtime":1678379858738,"results":"16","hashOfConfig":"14"},{"size":1316,"mtime":1678379762053,"results":"17","hashOfConfig":"14"},{"size":858,"mtime":1663979904791,"results":"18","hashOfConfig":"14"},{"size":1207,"mtime":1664489667757,"results":"19","hashOfConfig":"14"},{"size":854,"mtime":1663980382757,"results":"20","hashOfConfig":"14"},{"size":891,"mtime":1663980746010,"results":"21","hashOfConfig":"14"},{"size":410,"mtime":1664299490977,"results":"22","hashOfConfig":"14"},{"size":418,"mtime":1664299556295,"results":"23","hashOfConfig":"14"},{"size":413,"mtime":1664299641415,"results":"24","hashOfConfig":"14"},{"size":946,"mtime":1664298948370,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rtys2p",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/natalietaylor/Desktop/capstone/src/index.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/App.js",["66"],[],"/Users/natalietaylor/Desktop/capstone/src/context/QuotesContext.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/components/Home.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/components/Kindness.js",["67"],[],"import React, { useEffect, useContext } from 'react'\nimport { QuotesContext } from '../context/QuotesContext'\nimport KindList from './KindList'\n\n\nexport default function Kindness() {\n\n    const {kindness, getKindness} = useContext(QuotesContext)\n\n    const listOfQuotes = kindness.map((quote, index) => { \n        return (\n           <KindList\n                key={quote.id}\n                body={quote.body}\n                author={quote.author}\n                index={index}\n            />\n    )})\n\n    useEffect(() => {\n        getKindness()\n        console.log(\"useEffect\")\n    }, [])\n\n    console.log('kindness', kindness)\n\n    return (\n        <div className='kindness'>\n            <h2>Quotes of Kindness from Inspirational Leaders</h2>\n            <p className='kindness-quotes'>\n                {listOfQuotes}\n            </p>\n        </div>\n    )\n}","/Users/natalietaylor/Desktop/capstone/src/components/Confidence.js",["68"],[],"import React, {useEffect, useContext } from 'react'\nimport { QuotesContext } from '../context/QuotesContext'\nimport ConfidentList from './ConfidentList'\n//import ConfidentList from '../components/ConfidentList'\n\nexport default function Confidence() {\n\n    const {confidence, getConfidence} = useContext(QuotesContext)\n\n    const listOfQuotes = confidence.map((quote, index) => { \n        return (\n           <ConfidentList\n                key={quote.id}\n                body={quote.body}\n                author={quote.author}\n                index={index}\n            />\n        //<div>\n        //   {console.log(key, \"test\")}\n           //create a component and spread key into this component\n         \n    )})\n    //console.log(confidenceArr, \"confidenceArray\")\n    //console.log(listOfQuotes, \"list\")\n    \n\n    useEffect(() => {\n        getConfidence()\n        console.log(\"useEffect\")\n    }, [])\n\n    console.log(\"listOfQuotes\", listOfQuotes)\n\n    return (\n        <div className='confidence'>\n            <h2 >Confidence Boosting Quotes from Inspirational Leaders</h2>\n            <p className='confidence-quotes'>\n                {listOfQuotes}\n                \n            </p>\n        </div>\n    )\n}","/Users/natalietaylor/Desktop/capstone/src/components/Success.js",["69"],[],"import React, {useEffect, useContext} from 'react'\nimport { QuotesContext } from '../context/QuotesContext'\nimport SuccessList from './SuccessList'\n\nexport default function Success() {\n\n    const {success, getSuccess} = useContext(QuotesContext)\n\n    const listOfQuotes = success.map((quote, index) => { \n        return (\n           <SuccessList\n                key={quote.id}\n                body={quote.body}\n                author={quote.author}\n                index={index}\n            />\n    )})\n\n    useEffect(() => {\n        getSuccess()\n        console.log(\"useEffect\")\n    }, [])\n\n    console.log('success', success)\n\n    return (\n        <div className='success'>\n            <h2>Quotes on Success from Inspirational Leaders</h2>\n            <p className='success-quotes'>\n                {listOfQuotes}\n            </p>\n        </div>\n    )\n}","/Users/natalietaylor/Desktop/capstone/src/components/Inspiration.js",["70"],[],"import React, {useEffect, useContext} from 'react'\nimport {QuotesContext} from '../context/QuotesContext'\nimport InspireList from './InspireList'\n\nexport default function Inspiration() {\n\n    const {inspiration, getInspiration} = useContext(QuotesContext)\n\n    const listOfQuotes = inspiration.map((quote, index) => { \n        return (\n           <InspireList\n                key={quote.id}\n                body={quote.body}\n                author={quote.author}\n                index={index}\n            />\n    )})\n\n    useEffect(() => {\n        getInspiration()\n        console.log(\"useEffect\")\n    }, [])\n\n    console.log('inspiration', inspiration)\n\n    return (\n        <div className='inspiration'>\n            <h2>Inspirational Quotes from Inspirational Leaders</h2>\n            <p className='inspiration-quotes'>\n                {listOfQuotes}\n            </p>\n        </div>\n    )\n}","/Users/natalietaylor/Desktop/capstone/src/components/KindList.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/components/InspireList.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/components/SuccessList.js",[],[],"/Users/natalietaylor/Desktop/capstone/src/components/ConfidentList.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":23,"column":8,"nodeType":"77","endLine":23,"endColumn":10,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":30,"column":8,"nodeType":"77","endLine":30,"endColumn":10,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":22,"column":8,"nodeType":"77","endLine":22,"endColumn":10,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":22,"column":8,"nodeType":"77","endLine":22,"endColumn":10,"suggestions":"84"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getKindness'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'getConfidence'. Either include it or remove the dependency array.",["86"],"React Hook useEffect has a missing dependency: 'getSuccess'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'getInspiration'. Either include it or remove the dependency array.",["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [getKindness]",{"range":"97","text":"98"},"Update the dependencies array to be: [getConfidence]",{"range":"99","text":"100"},"Update the dependencies array to be: [getSuccess]",{"range":"101","text":"102"},"Update the dependencies array to be: [getInspiration]",{"range":"103","text":"104"},[585,587],"[getKindness]",[896,898],"[getConfidence]",[586,588],"[getSuccess]",[604,606],"[getInspiration]"]